@model DesafioSGI.Models.Aluno

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Editar</h1>

<h4>Aluno</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="alunoId" />
            <div class="form-group">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DataDeNacimento" class="control-label"></label>
                <input asp-for="DataDeNacimento" class="form-control" />
                <span asp-validation-for="DataDeNacimento" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="cpf" class="control-label"></label>
                <input asp-for="cpf" class="form-control" oninput="mascara(this)"/>
                <span asp-validation-for="cpf" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="numerodeCertidao" class="control-label"></label>
                <input asp-for="numerodeCertidao" class="form-control"  oninput="MascaraNumerodeCertidao(this)" />
                <span asp-validation-for="numerodeCertidao" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="responsavelId" class="control-label"></label>
                <select asp-for="responsavelId" class="form-control" asp-items="ViewBag.responsavel"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Salvar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<div>
    <a class="btn btn-warning" asp-action="Index">Voltar</a>
</div>
<script>
    function mascara(i) {

        let v = i.value;

        if (isNaN(v[v.length - 1])) {
            i.value = v.substring(0, v.length - 1);
            return;
        }

        i.setAttribute("maxlength", "14");
        if (v.length == 3 || v.length == 7) i.value += ".";
        if (v.length == 11) i.value += "-";

    }
    function MascaraNumerodeCertidao(i) {
        let v = i.value;

        if (isNaN(v[v.length - 1])) {
            i.value = v.substring(0, v.length - 1);
            return;
        }
        i.setAttribute("maxlength", "32");
    }
</script>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
